package com.zcjd.app_server.mapper;

import com.zcjd.app_server.model.*;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface ContactMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    long countByExample(DeptContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    int deleteByExample(DeptContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    int insert(DeptContact record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    int insertSelective(DeptContact record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    List<DeptContact> selectByExample(DeptContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    DeptContact selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    int updateByExampleSelective(@Param("record") DeptContact record, @Param("example") DeptContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    int updateByExample(@Param("record") DeptContact record, @Param("example") DeptContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    int updateByPrimaryKeySelective(DeptContact record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_contact
     *
     * @mbg.generated Thu Aug 29 09:41:12 CST 2019
     */
    int updateByPrimaryKey(DeptContact record);

	List<com.zcjd.app_server.vo.DeptContact> selectContacts(String id);
	/**
	 * 查询当前用户的所有联系人的id集合
	 * @param id
	 * @return
	 */
	List<UserInfoPojo> selectContactsInfoById(String id);
	/**
	 * 查询所有部门信息
	 * @return
	 */
	List<DepartmentPojo> selectAllDepartment();
	
	/**
	 * 保存用户的聊天信息
	 * @param chatInfo
	 * @return
	 */
	Integer saveChatInfo(ChatInfo chatInfo);

    /**
     * 更新用户聊天信息状态
     * @return
     */
	Integer updateCharInfoState(@Param("msgId") Integer msgId, @Param("state") Integer state);

    /**
     * 添加群组
     * @param group
     * @return
     */
    Integer addGroup(Group group);

    /**
     * 根据用户id获取其创建的群组
     * @param userId
     * @return
     */
    List<Group> getGroupByUserId(String userId);
    /**
     * 根据用户id获取其加入的群组
     * @param userId
     * @return
     */
    List<Group> getGroupJoin(String userId);

    /**
     * 用户添加部门联系人id
     * @param currentUserId
     * @param contactUserId
     * @return
     */
    Integer addDeptContact(@Param("currentUserId") String currentUserId, @Param("contactUserId") String contactUserId);
    /**
     * 通过群号或者群名称查询群组
     * @return
     */
    List<Group> getGroupByGroupIdOrName(String keyWord);
    /**
     * 添加群用户
     * @param groupId
     * @param userId
     * @return
     */
    Integer addGroupUser(@Param("groupId") String groupId, @Param("userId") String userId);
}